순회(traversal)
그래프의 모든 노드들을 방문하는일

BFS
시작점 으로부터 거리1,2,3...n인 
시작위치를 큐에 넣는다.
큐가 빌때까지 
큐에서 값을 뺀다. 그 값에서 갈 수 있는 곳에서 
 
순서는 중요하지 않음! 
최단 경로의 길이를 구할수 있다. while loop 실행 횟수
d[v] = s부터 v까지의 최단경로의 길이를이
d[v]의 값을 -1로 초기화 하고 하는 방식이 있음
pi[v] = 직전 노드가 무엇인지 predecessor
Level order = BFS의 2진 버전
인접 행렬의 경우에는 O(n^2)
인접리스트로 구현할 경우 시간복잡도 무방향 그래프의 degree(v)의 합은 2m이므로 o(n+m) 큐에 들어가는 최대 수는 n
방향그래프라면 m;

BFS트리
v와 ㅠ[v]를 연결하는 에지들로 구성된 트리
ㅠ[v]는 v에 연결되기전에 이전 노드

BFS 트리에서 s에서 v까지의 경로는 s에서 v까지 가는 최단경로

최단경로 출력하기


BFS에서 어떤 에지도 2개의 level을 바로 건너지 않는다.

DFS
트리의 전위, 중위, 후위 순회는 사실 DFS의 이진 트리 버전 이다.
레벨 순회는 BFS에 해당됨
마지막에서 백트레킹 하는것은 
되돌아가는것에도 주목 해봐!!!

더 이상 갈곳이 없으면 종료!
DFS 재귀 사용하기도 연습해보기!!!
이경우에는 Disconnected이거나 방향 그래프라면 불가능
시간복잡도(재귀)
n - 모든 노드를 방문
m - 모든 에지를 방문
에지 하나당 재귀가 한번 이상 호출되지 않는다.
O(m+n)